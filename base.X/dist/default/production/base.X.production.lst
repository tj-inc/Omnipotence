

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue May 10 10:53:06 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  008F                     	;# 
    61  0090                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0093                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  0105                     	;# 
    80  0107                     	;# 
    81  0108                     	;# 
    82  0109                     	;# 
    83  010C                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0185                     	;# 
    89  0187                     	;# 
    90  0188                     	;# 
    91  0189                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94                           
    95                           	psect	nvBANK0
    96  004B                     __pnvBANK0:	
    97  004B                     _last_CCP1_time:	
    98  004B                     	ds	2
    99  0015                     _CCPR1	set	21
   100  000E                     _TMR1	set	14
   101  0005                     _PORTA	set	5
   102  0062                     _CCP1IF	set	98
   103  00B8                     _CCP1M0	set	184
   104  00B9                     _CCP1M1	set	185
   105  00BA                     _CCP1M2	set	186
   106  00BB                     _CCP1M3	set	187
   107  005F                     _GIE	set	95
   108  005E                     _PEIE	set	94
   109  0084                     _T1CKPS0	set	132
   110  0085                     _T1CKPS1	set	133
   111  0081                     _TMR1CS	set	129
   112  0086                     _TMR1GE	set	134
   113  0080                     _TMR1ON	set	128
   114  0085                     _TRISA	set	133
   115  0462                     _CCP1IE	set	1122
   116  0439                     _TRISC1	set	1081
   117  0188                     _ANSEL	set	392
   118  0189                     _ANSELH	set	393
   119                           
   120                           ; #config settings
   121  0000                     
   122                           	psect	cinit
   123  0015                     start_initialization:	
   124  0015                     __initialization:	
   125                           
   126                           ; Clear objects allocated to BITCOMMON
   127  0015  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   128                           
   129                           ; Clear objects allocated to BITBANK0
   130  0016  01CD               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   131                           
   132                           ; Clear objects allocated to BANK0
   133  0017  1383               	bcf	3,7	;select IRP bank0
   134  0018  3020               	movlw	low __pbssBANK0
   135  0019  0084               	movwf	4
   136  001A  3043               	movlw	low (__pbssBANK0+35)
   137  001B  120A  118A  2116   	fcall	clear_ram0
   138  001E                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141  001E                     __end_of__initialization:	
   142  001E  0183               	clrf	3
   143  001F  120A  118A  28C5   	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bitbssCOMMON
   146  03E8                     __pbitbssCOMMON:	
   147  03E8                     _RC_session_data_received:	
   148  03E8                     	ds	1
   149  03E9                     _RC_session_start_received:	
   150  03E9                     	ds	1
   151  03EA                     _mode:	
   152  03EA                     	ds	1
   153                           
   154                           	psect	bitbssBANK0
   155  0268                     __pbitbssBANK0:	
   156  0268                     _RC_session_activated:	
   157  0268                     	ds	1
   158                           
   159                           	psect	bssBANK0
   160  0020                     __pbssBANK0:	
   161  0020                     _data:	
   162  0020                     	ds	32
   163  0040                     _RC_DATA:	
   164  0040                     	ds	1
   165  0041                     _data_bit_counter:	
   166  0041                     	ds	1
   167  0042                     _rc_data_index:	
   168  0042                     	ds	1
   169                           
   170                           	psect	clrtext
   171  0116                     clear_ram0:	
   172                           ;	Called with FSR containing the base address, and
   173                           ;	W with the last address+1
   174                           
   175  0116  0064               	clrwdt	;clear the watchdog before getting into this loop
   176  0117                     clrloop0:	
   177  0117  0180               	clrf	0	;clear RAM location pointed to by FSR
   178  0118  0A84               	incf	4,f	;increment pointer
   179  0119  0604               	xorwf	4,w	;XOR with final address
   180  011A  1903               	btfsc	3,2	;have we reached the end yet?
   181  011B  3400               	retlw	0	;all done for this memory range, return
   182  011C  0604               	xorwf	4,w	;XOR again to restore value
   183  011D  2917               	goto	clrloop0	;do the next byte
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:	
   187  0070                     ?_main:	
   188  0070                     ?_interrupt_handler:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ??_interrupt_handler:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196  0070                     	ds	8
   197  0078                     interrupt_handler@j:	
   198                           
   199                           ; 1 bytes @ 0x8
   200  0078                     	ds	1
   201  0079                     interrupt_handler@i:	
   202                           
   203                           ; 1 bytes @ 0x9
   204  0079                     	ds	1
   205  007A                     interrupt_handler@i_56:	
   206                           
   207                           ; 1 bytes @ 0xA
   208  007A                     	ds	1
   209  007B                     interrupt_handler@temp:	
   210                           
   211                           ; 2 bytes @ 0xB
   212  007B                     	ds	2
   213                           
   214                           	psect	cstackBANK0
   215  0043                     __pcstackBANK0:	
   216  0043                     ??_main:	
   217                           
   218                           ; 1 bytes @ 0x0
   219  0043                     	ds	4
   220  0047                     main@temp_TMR1:	
   221                           
   222                           ; 2 bytes @ 0x4
   223  0047                     	ds	2
   224  0049                     main@temp_last_CCP1_time:	
   225                           
   226                           ; 2 bytes @ 0x6
   227  0049                     	ds	2
   228                           
   229                           	psect	maintext
   230  00C5                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 54 in file "base_main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;  temp_last_CC    2    6[BANK0 ] unsigned int 
   241 ;;  temp_TMR1       2    4[BANK0 ] unsigned int 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         0       4       0       0       0
   253 ;;      Temps:          0       4       0       0       0
   254 ;;      Totals:         0       8       0       0       0
   255 ;;Total ram usage:        8 bytes
   256 ;; Hardware stack levels required when called:    1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           
   265                           ;psect for function _main
   266  00C5                     _main:	
   267                           
   268                           ;base_main.c: 56: TRISA = 0;
   269                           
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0]
   272  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   273  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   274  00C7  0185               	clrf	5	;volatile
   275                           
   276                           ;base_main.c: 57: ANSEL = 0;
   277  00C8  1683               	bsf	3,5	;RP0=1, select bank3
   278  00C9  1703               	bsf	3,6	;RP1=1, select bank3
   279  00CA  0188               	clrf	8	;volatile
   280                           
   281                           ;base_main.c: 58: ANSELH = 0;
   282  00CB  0189               	clrf	9	;volatile
   283                           
   284                           ;base_main.c: 61: TMR1GE = 0; TMR1ON = 1;
   285  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   286  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   287  00CE  1310               	bcf	16,6	;volatile
   288  00CF  1410               	bsf	16,0	;volatile
   289                           
   290                           ;base_main.c: 62: TMR1CS = 0;
   291  00D0  1090               	bcf	16,1	;volatile
   292                           
   293                           ;base_main.c: 63: T1CKPS1 = 1; T1CKPS0 = 0;
   294  00D1  1690               	bsf	16,5	;volatile
   295  00D2  1210               	bcf	16,4	;volatile
   296                           
   297                           ;base_main.c: 74: TRISC1 = 0;
   298  00D3  1683               	bsf	3,5	;RP0=1, select bank1
   299  00D4  1303               	bcf	3,6	;RP1=0, select bank1
   300  00D5  1087               	bcf	7,1	;volatile
   301                           
   302                           ;base_main.c: 75: CCP1M3 = 0; CCP1M2 = 1; CCP1M1 = 0; CCP1M0 = 0;
   303  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   304  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   305  00D8  1197               	bcf	23,3	;volatile
   306  00D9  1517               	bsf	23,2	;volatile
   307  00DA  1097               	bcf	23,1	;volatile
   308  00DB  1017               	bcf	23,0	;volatile
   309                           
   310                           ;base_main.c: 76: CCP1IE = 1;
   311  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   312  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   313  00DE  150C               	bsf	12,2	;volatile
   314                           
   315                           ;base_main.c: 77: CCP1IF = 0;
   316  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   317  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   318  00E1  110C               	bcf	12,2	;volatile
   319                           
   320                           ;base_main.c: 78: last_CCP1_time = TMR1;
   321  00E2  080F               	movf	15,w	;volatile
   322  00E3  00CC               	movwf	_last_CCP1_time+1
   323  00E4  080E               	movf	14,w	;volatile
   324  00E5  00CB               	movwf	_last_CCP1_time
   325                           
   326                           ;base_main.c: 79: PEIE = 1;
   327  00E6  170B               	bsf	11,6	;volatile
   328                           
   329                           ;base_main.c: 80: GIE = 1;
   330  00E7  178B               	bsf	11,7	;volatile
   331  00E8                     l766:	
   332                           ;base_main.c: 82: unsigned int temp_TMR1;
   333                           ;base_main.c: 83: unsigned int temp_last_CCP1_time;
   334                           ;base_main.c: 85: while (1) {
   335                           
   336                           
   337                           ;base_main.c: 86: temp_last_CCP1_time = last_CCP1_time;
   338  00E8  084C               	movf	_last_CCP1_time+1,w
   339  00E9  00CA               	movwf	main@temp_last_CCP1_time+1
   340  00EA  084B               	movf	_last_CCP1_time,w
   341  00EB  00C9               	movwf	main@temp_last_CCP1_time
   342                           
   343                           ;base_main.c: 87: temp_TMR1 = TMR1;
   344  00EC  080F               	movf	15,w	;volatile
   345  00ED  00C8               	movwf	main@temp_TMR1+1
   346  00EE  080E               	movf	14,w	;volatile
   347  00EF  00C7               	movwf	main@temp_TMR1
   348                           
   349                           ;base_main.c: 88: if ((temp_TMR1 > temp_last_CCP1_time) & (temp_TMR1-temp_last_CCP1_time
      +                           > 55000)) {
   350  00F0  0848               	movf	main@temp_TMR1+1,w
   351  00F1  024A               	subwf	main@temp_last_CCP1_time+1,w
   352  00F2  1D03               	skipz
   353  00F3  28F6               	goto	u255
   354  00F4  0847               	movf	main@temp_TMR1,w
   355  00F5  0249               	subwf	main@temp_last_CCP1_time,w
   356  00F6                     u255:	
   357  00F6  1803               	skipnc
   358  00F7  2913               	goto	l782
   359  00F8  0949               	comf	main@temp_last_CCP1_time,w
   360  00F9  00C3               	movwf	??_main
   361  00FA  094A               	comf	main@temp_last_CCP1_time+1,w
   362  00FB  00C4               	movwf	??_main+1
   363  00FC  0AC3               	incf	??_main,f
   364  00FD  1903               	skipnz
   365  00FE  0AC4               	incf	??_main+1,f
   366  00FF  0847               	movf	main@temp_TMR1,w
   367  0100  0743               	addwf	??_main,w
   368  0101  00C5               	movwf	??_main+2
   369  0102  0848               	movf	main@temp_TMR1+1,w
   370  0103  1803               	skipnc
   371  0104  0A48               	incf	main@temp_TMR1+1,w
   372  0105  0744               	addwf	??_main+1,w
   373  0106  00C6               	movwf	??_main+3
   374  0107  30D6               	movlw	214
   375  0108  0246               	subwf	??_main+3,w
   376  0109  30D9               	movlw	217
   377  010A  1903               	skipnz
   378  010B  0245               	subwf	??_main+2,w
   379  010C  1C03               	skipc
   380  010D  2913               	goto	l782
   381                           
   382                           ;base_main.c: 89: RC_DATA = 0;
   383  010E  01C0               	clrf	_RC_DATA
   384                           
   385                           ;base_main.c: 90: RC_session_activated = 0;
   386  010F  104D               	bcf	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   387                           
   388                           ;base_main.c: 91: RC_session_start_received = 0;
   389  0110  10FD               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   390                           
   391                           ;base_main.c: 92: RC_session_data_received = 0;
   392  0111  107D               	bcf	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   393                           
   394                           ;base_main.c: 93: data_bit_counter = 0;
   395  0112  01C1               	clrf	_data_bit_counter
   396  0113                     l782:	
   397                           
   398                           ;base_main.c: 94: }
   399                           ;base_main.c: 95: PORTA = RC_DATA;
   400  0113  0840               	movf	_RC_DATA,w
   401  0114  0085               	movwf	5	;volatile
   402  0115  28E8               	goto	l766
   403  0116                     __end_of_main:	
   404                           
   405                           	psect	text1
   406  0022                     __ptext1:	
   407 ;; *************** function _interrupt_handler *****************
   408 ;; Defined at:
   409 ;;		line 99 in file "base_main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  j               1    8[COMMON] unsigned char 
   414 ;;  i               1   10[COMMON] unsigned char 
   415 ;;  temp            2   11[COMMON] unsigned int 
   416 ;;  i               1    9[COMMON] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         5       0       0       0       0
   428 ;;      Temps:          8       0       0       0       0
   429 ;;      Totals:        13       0       0       0       0
   430 ;;Total ram usage:       13 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		Interrupt level 1
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _interrupt_handler
   441  0022                     _interrupt_handler:	
   442                           
   443                           ;base_main.c: 100: if (CCP1IF == 1) {
   444  0022  1D0C               	btfss	12,2	;volatile
   445  0023  28BA               	goto	i1l86
   446                           
   447                           ;base_main.c: 101: if (RC_session_activated == 0) {
   448  0024  184D               	btfsc	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   449  0025  284D               	goto	i1l69
   450                           
   451                           ;base_main.c: 102: if (RC_session_start_received == 1) {
   452  0026  1CFD               	btfss	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   453  0027  284A               	goto	i1l70
   454                           
   455                           ;base_main.c: 103: unsigned int temp = CCPR1-last_CCP1_time;
   456  0028  094B               	comf	_last_CCP1_time,w
   457  0029  00F0               	movwf	??_interrupt_handler
   458  002A  094C               	comf	_last_CCP1_time+1,w
   459  002B  00F1               	movwf	??_interrupt_handler+1
   460  002C  0AF0               	incf	??_interrupt_handler,f
   461  002D  1903               	skipnz
   462  002E  0AF1               	incf	??_interrupt_handler+1,f
   463  002F  0815               	movf	21,w	;volatile
   464  0030  0770               	addwf	??_interrupt_handler,w
   465  0031  00F2               	movwf	??_interrupt_handler+2
   466  0032  0816               	movf	22,w	;volatile
   467  0033  1803               	skipnc
   468  0034  0A16               	incf	22,w	;volatile
   469  0035  0771               	addwf	??_interrupt_handler+1,w
   470  0036  00F3               	movwf	??_interrupt_handler+3
   471  0037  0872               	movf	??_interrupt_handler+2,w
   472  0038  00FB               	movwf	interrupt_handler@temp
   473  0039  0873               	movf	??_interrupt_handler+3,w
   474  003A  00FC               	movwf	interrupt_handler@temp+1
   475                           
   476                           ;base_main.c: 104: if (temp > 6000) {
   477  003B  3017               	movlw	23
   478  003C  027C               	subwf	interrupt_handler@temp+1,w
   479  003D  3071               	movlw	113
   480  003E  1903               	skipnz
   481  003F  027B               	subwf	interrupt_handler@temp,w
   482  0040  1C03               	skipc
   483  0041  2846               	goto	i1l796
   484                           
   485                           ;base_main.c: 105: RC_session_activated = 1;
   486  0042  144D               	bsf	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   487                           
   488                           ;base_main.c: 106: data_bit_counter = 1;
   489  0043  01C1               	clrf	_data_bit_counter
   490  0044  0AC1               	incf	_data_bit_counter,f
   491                           
   492                           ;base_main.c: 107: } else {
   493  0045  2847               	goto	i1l798
   494  0046                     i1l796:	
   495                           
   496                           ;base_main.c: 108: char j = 0;
   497  0046  01F8               	clrf	interrupt_handler@j
   498  0047                     i1l798:	
   499                           
   500                           ;base_main.c: 109: }
   501                           ;base_main.c: 110: RC_session_start_received = 0;
   502  0047  10FD               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   503                           
   504                           ;base_main.c: 111: char i = 0;
   505  0048  01F9               	clrf	interrupt_handler@i
   506                           
   507                           ;base_main.c: 112: } else {
   508  0049  28B5               	goto	i1l824
   509  004A                     i1l70:	
   510                           
   511                           ;base_main.c: 113: RC_session_start_received = 1;
   512  004A  14FD               	bsf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   513                           
   514                           ;base_main.c: 114: char i = 0;
   515  004B  01FA               	clrf	interrupt_handler@i_56
   516                           
   517                           ;base_main.c: 115: }
   518                           ;base_main.c: 116: } else {
   519  004C  28B5               	goto	i1l824
   520  004D                     i1l69:	
   521                           
   522                           ;base_main.c: 117: if (RC_session_data_received == 0) {
   523  004D  187D               	btfsc	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   524  004E  287E               	goto	i1l75
   525                           
   526                           ;base_main.c: 118: data_bit_counter++;
   527  004F  3001               	movlw	1
   528  0050  00F0               	movwf	??_interrupt_handler
   529  0051  0870               	movf	??_interrupt_handler,w
   530  0052  07C1               	addwf	_data_bit_counter,f
   531                           
   532                           ;base_main.c: 119: if (data_bit_counter <= 33) {
   533  0053  3022               	movlw	34
   534  0054  0241               	subwf	_data_bit_counter,w
   535  0055  1803               	skipnc
   536  0056  287C               	goto	i1l76
   537                           
   538                           ;base_main.c: 120: if (CCPR1-last_CCP1_time > 600) {
   539  0057  094B               	comf	_last_CCP1_time,w
   540  0058  00F0               	movwf	??_interrupt_handler
   541  0059  094C               	comf	_last_CCP1_time+1,w
   542  005A  00F1               	movwf	??_interrupt_handler+1
   543  005B  0AF0               	incf	??_interrupt_handler,f
   544  005C  1903               	skipnz
   545  005D  0AF1               	incf	??_interrupt_handler+1,f
   546  005E  0815               	movf	21,w	;volatile
   547  005F  0770               	addwf	??_interrupt_handler,w
   548  0060  00F2               	movwf	??_interrupt_handler+2
   549  0061  0816               	movf	22,w	;volatile
   550  0062  1803               	skipnc
   551  0063  0A16               	incf	22,w	;volatile
   552  0064  0771               	addwf	??_interrupt_handler+1,w
   553  0065  00F3               	movwf	??_interrupt_handler+3
   554  0066  3002               	movlw	2
   555  0067  0273               	subwf	??_interrupt_handler+3,w
   556  0068  3059               	movlw	89
   557  0069  1903               	skipnz
   558  006A  0272               	subwf	??_interrupt_handler+2,w
   559  006B  1C03               	skipc
   560  006C  2875               	goto	i1l810
   561                           
   562                           ;base_main.c: 121: data[data_bit_counter-2] = 1;
   563  006D  0841               	movf	_data_bit_counter,w
   564  006E  3EFE               	addlw	254
   565  006F  3E20               	addlw	(low (_data| 0))& (0+255)
   566  0070  0084               	movwf	4
   567  0071  1383               	bcf	3,7	;select IRP bank0
   568  0072  0180               	clrf	0
   569  0073  0A80               	incf	0,f
   570                           
   571                           ;base_main.c: 122: } else {
   572  0074  28B5               	goto	i1l824
   573  0075                     i1l810:	
   574                           
   575                           ;base_main.c: 123: data[data_bit_counter-2] = 0;
   576  0075  0841               	movf	_data_bit_counter,w
   577  0076  3EFE               	addlw	254
   578  0077  3E20               	addlw	(low (_data| 0))& (0+255)
   579  0078  0084               	movwf	4
   580  0079  1383               	bcf	3,7	;select IRP bank0
   581  007A  0180               	clrf	0
   582                           
   583                           ;base_main.c: 124: }
   584                           ;base_main.c: 125: } else {
   585  007B  28B5               	goto	i1l824
   586  007C                     i1l76:	
   587                           
   588                           ;base_main.c: 126: RC_session_data_received = 1;
   589  007C  147D               	bsf	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   590  007D  2880               	goto	i1l812
   591  007E                     i1l75:	
   592                           ;base_main.c: 128: }
   593                           ;base_main.c: 139: } else {
   594                           
   595                           ;base_main.c: 127: RC_session_start_received = 1;
   596                           
   597                           
   598                           ;base_main.c: 140: if (RC_session_start_received == 0) {
   599  007E  18FD               	btfsc	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   600  007F  2882               	goto	i1l814
   601  0080                     i1l812:	
   602                           
   603                           ;base_main.c: 141: RC_session_start_received = 1;
   604  0080  14FD               	bsf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   605                           
   606                           ;base_main.c: 142: } else {
   607  0081  28B5               	goto	i1l824
   608  0082                     i1l814:	
   609                           
   610                           ;base_main.c: 143: if (CCPR1 - last_CCP1_time > 6000) {
   611  0082  094B               	comf	_last_CCP1_time,w
   612  0083  00F0               	movwf	??_interrupt_handler
   613  0084  094C               	comf	_last_CCP1_time+1,w
   614  0085  00F1               	movwf	??_interrupt_handler+1
   615  0086  0AF0               	incf	??_interrupt_handler,f
   616  0087  1903               	skipnz
   617  0088  0AF1               	incf	??_interrupt_handler+1,f
   618  0089  0815               	movf	21,w	;volatile
   619  008A  0770               	addwf	??_interrupt_handler,w
   620  008B  00F2               	movwf	??_interrupt_handler+2
   621  008C  0816               	movf	22,w	;volatile
   622  008D  1803               	skipnc
   623  008E  0A16               	incf	22,w	;volatile
   624  008F  0771               	addwf	??_interrupt_handler+1,w
   625  0090  00F3               	movwf	??_interrupt_handler+3
   626  0091  3017               	movlw	23
   627  0092  0273               	subwf	??_interrupt_handler+3,w
   628  0093  3071               	movlw	113
   629  0094  1903               	skipnz
   630  0095  0272               	subwf	??_interrupt_handler+2,w
   631  0096  1C03               	skipc
   632  0097  289F               	goto	i1l820
   633                           
   634                           ;base_main.c: 144: RC_session_activated = 1;
   635  0098  144D               	bsf	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   636                           
   637                           ;base_main.c: 145: RC_session_start_received = 0;
   638  0099  10FD               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   639                           
   640                           ;base_main.c: 146: RC_session_data_received = 0;
   641  009A  107D               	bcf	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   642                           
   643                           ;base_main.c: 147: data_bit_counter = 1;
   644  009B  01C1               	clrf	_data_bit_counter
   645  009C  0AC1               	incf	_data_bit_counter,f
   646                           
   647                           ;base_main.c: 148: RC_DATA = 0;
   648  009D  01C0               	clrf	_RC_DATA
   649                           
   650                           ;base_main.c: 149: } else if (CCPR1 - last_CCP1_time > 46500) {
   651  009E  28B5               	goto	i1l824
   652  009F                     i1l820:	
   653  009F  094B               	comf	_last_CCP1_time,w
   654  00A0  00F0               	movwf	??_interrupt_handler
   655  00A1  094C               	comf	_last_CCP1_time+1,w
   656  00A2  00F1               	movwf	??_interrupt_handler+1
   657  00A3  0AF0               	incf	??_interrupt_handler,f
   658  00A4  1903               	skipnz
   659  00A5  0AF1               	incf	??_interrupt_handler+1,f
   660  00A6  0815               	movf	21,w	;volatile
   661  00A7  0770               	addwf	??_interrupt_handler,w
   662  00A8  00F2               	movwf	??_interrupt_handler+2
   663  00A9  0816               	movf	22,w	;volatile
   664  00AA  1803               	skipnc
   665  00AB  0A16               	incf	22,w	;volatile
   666  00AC  0771               	addwf	??_interrupt_handler+1,w
   667  00AD  00F3               	movwf	??_interrupt_handler+3
   668  00AE  30B5               	movlw	181
   669  00AF  0273               	subwf	??_interrupt_handler+3,w
   670  00B0  30A5               	movlw	165
   671  00B1  1903               	skipnz
   672  00B2  0272               	subwf	??_interrupt_handler+2,w
   673  00B3  1803               	btfsc	3,0
   674                           
   675                           ;base_main.c: 150: RC_session_start_received = 0;
   676  00B4  10FD               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   677  00B5                     i1l824:	
   678                           
   679                           ;base_main.c: 151: }
   680                           ;base_main.c: 152: }
   681                           ;base_main.c: 153: }
   682                           ;base_main.c: 154: }
   683                           ;base_main.c: 155: last_CCP1_time = CCPR1;
   684  00B5  0816               	movf	22,w	;volatile
   685  00B6  00CC               	movwf	_last_CCP1_time+1
   686  00B7  0815               	movf	21,w	;volatile
   687  00B8  00CB               	movwf	_last_CCP1_time
   688                           
   689                           ;base_main.c: 156: CCP1IF = 0;
   690  00B9  110C               	bcf	12,2	;volatile
   691  00BA                     i1l86:	
   692  00BA  0877               	movf	??_interrupt_handler+7,w
   693  00BB  00FF               	movwf	127
   694  00BC  0876               	movf	??_interrupt_handler+6,w
   695  00BD  008A               	movwf	10
   696  00BE  0875               	movf	??_interrupt_handler+5,w
   697  00BF  0084               	movwf	4
   698  00C0  0E74               	swapf	(??_interrupt_handler+4)^(0+-128),w
   699  00C1  0083               	movwf	3
   700  00C2  0EFE               	swapf	126,f
   701  00C3  0E7E               	swapf	126,w
   702  00C4  0009               	retfie
   703  00C5                     __end_of_interrupt_handler:	
   704  007E                     btemp	set	126	;btemp
   705  007E                     wtemp	set	126
   706  007E                     wtemp0	set	126
   707  0080                     wtemp1	set	128
   708  0082                     wtemp2	set	130
   709  0084                     wtemp3	set	132
   710  0086                     wtemp4	set	134
   711  0088                     wtemp5	set	136
   712  007F                     wtemp6	set	127
   713  007E                     ttemp	set	126
   714  007E                     ttemp0	set	126
   715  0081                     ttemp1	set	129
   716  0084                     ttemp2	set	132
   717  0087                     ttemp3	set	135
   718  007F                     ttemp4	set	127
   719  007E                     ltemp	set	126
   720  007E                     ltemp0	set	126
   721  0082                     ltemp1	set	130
   722  0086                     ltemp2	set	134
   723  0080                     ltemp3	set	128
   724                           
   725                           	psect	intentry
   726  0004                     __pintentry:	
   727                           ;incstack = 0
   728                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
   729                           
   730  0004                     interrupt_function:	
   731  007E                     saved_w	set	btemp
   732  0004  00FE               	movwf	btemp
   733  0005  0E03               	swapf	3,w
   734  0006  00F4               	movwf	??_interrupt_handler+4
   735  0007  0804               	movf	4,w
   736  0008  00F5               	movwf	??_interrupt_handler+5
   737  0009  080A               	movf	10,w
   738  000A  00F6               	movwf	??_interrupt_handler+6
   739  000B  1283               	bcf	3,5	;RP0=0, select bank0
   740  000C  1303               	bcf	3,6	;RP1=0, select bank0
   741  000D  087F               	movf	btemp+1,w
   742  000E  00F7               	movwf	??_interrupt_handler+7
   743  000F  120A  118A  2822   	ljmp	_interrupt_handler


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     130
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_handler                                   13    13      0      43
                                              0 COMMON    13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue May 10 10:53:06 2016

               __CFG_CP$OFF 0000                          fsr 0004                         l782 0113  
                       l766 00E8                         _GIE 005F                         u255 00F6  
              __CFG_CPD$OFF 0000                         fsr0 0004                         indf 0000  
              __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000                        _PEIE 005E  
                      i1l70 004A                        i1l75 007E                        i1l76 007C  
                      i1l69 004D                        i1l86 00BA                        _TMR1 000E  
              __CFG_WRT$OFF 0000                        _data 0020                        _main 00C5  
                      _mode 03EA                        btemp 007E                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             __CFG_IESO$OFF 0000               __CFG_MCLRE$ON 0000                       ?_main 0070  
                     _CCPR1 0015               __CFG_WDTE$OFF 0000                       _ANSEL 0188  
                     i1l810 0075                       i1l820 009F                       i1l812 0080  
                     i1l814 0082                       i1l824 00B5                       i1l796 0046  
                     i1l798 0047                       _PORTA 0005                       _TRISA 0085  
            __CFG_FCMEN$OFF 0000              __pbitbssCOMMON 03E8              __CFG_BOREN$OFF 0000  
                     pclath 000A                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           __initialization 0015                __end_of_main 0116                      ??_main 0043  
                    _CCP1M0 00B8                      _CCP1M1 00B9                      _CCP1M2 00BA  
                    _CCP1M3 00BB                      _CCP1IE 0462                      _CCP1IF 0062  
            _last_CCP1_time 004B                      _ANSELH 0189                      _TMR1GE 0086  
                    _TMR1CS 0081                      _TMR1ON 0080                      _TRISC1 0439  
     interrupt_handler@i_56 007A       interrupt_handler@temp 007B              __CFG_PWRTE$OFF 0000  
             main@temp_TMR1 0047                      saved_w 007E     __end_of__initialization 001E  
             _rc_data_index 0042              __pcstackCOMMON 0070                  __pbssBANK0 0020  
          _data_bit_counter 0041                  __pmaintext 00C5                  __pintentry 0004  
                   _T1CKPS0 0084                     _T1CKPS1 0085   _RC_session_start_received 03E9  
                   _RC_DATA 0040          interrupt_handler@i 0079          interrupt_handler@j 0078  
                   __ptext1 0022                     clrloop0 0117        end_of_initialization 001E  
             __pbitbssBANK0 0268         start_initialization 0015     main@temp_last_CCP1_time 0049  
                 ___latbits 0002               __pcstackBANK0 0043                   __pnvBANK0 004B  
         _interrupt_handler 0022          ?_interrupt_handler 0070         ??_interrupt_handler 0070  
         interrupt_function 0004                   clear_ram0 0116   __end_of_interrupt_handler 00C5  
         __CFG_BOR4V$BOR21V 0000    _RC_session_data_received 03E8               __size_of_main 0051  
__size_of_interrupt_handler 00A3                    intlevel1 0000        _RC_session_activated 0268  
