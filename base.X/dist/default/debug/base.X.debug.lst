

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue May 10 11:11:15 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  008F                     	;# 
    60  0090                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0093                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  0105                     	;# 
    79  0107                     	;# 
    80  0108                     	;# 
    81  0109                     	;# 
    82  010C                     	;# 
    83  010C                     	;# 
    84  010D                     	;# 
    85  010E                     	;# 
    86  010F                     	;# 
    87  0185                     	;# 
    88  0187                     	;# 
    89  0188                     	;# 
    90  0189                     	;# 
    91  018C                     	;# 
    92  018D                     	;# 
    93                           
    94                           	psect	nvBANK0
    95  004C                     __pnvBANK0:	
    96  004C                     _last_CCP1_time:	
    97  004C                     	ds	2
    98  0015                     _CCPR1	set	21
    99  000E                     _TMR1	set	14
   100  0005                     _PORTA	set	5
   101  0062                     _CCP1IF	set	98
   102  00B8                     _CCP1M0	set	184
   103  00B9                     _CCP1M1	set	185
   104  00BA                     _CCP1M2	set	186
   105  00BB                     _CCP1M3	set	187
   106  005F                     _GIE	set	95
   107  005E                     _PEIE	set	94
   108  0084                     _T1CKPS0	set	132
   109  0085                     _T1CKPS1	set	133
   110  0081                     _TMR1CS	set	129
   111  0086                     _TMR1GE	set	134
   112  0080                     _TMR1ON	set	128
   113  0085                     _TRISA	set	133
   114  0462                     _CCP1IE	set	1122
   115  0439                     _TRISC1	set	1081
   116  0188                     _ANSEL	set	392
   117  0189                     _ANSELH	set	393
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  07F4                     start_initialization:	
   123  07F4                     __initialization:	
   124                           
   125                           ; Clear objects allocated to BITBANK0
   126  07F4  01CB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   127                           
   128                           ; Clear objects allocated to BANK0
   129  07F5  1383               	bcf	3,7	;select IRP bank0
   130  07F6  3020               	movlw	low __pbssBANK0
   131  07F7  0084               	movwf	4
   132  07F8  3043               	movlw	low (__pbssBANK0+35)
   133  07F9  120A  118A  26F8   	fcall	clear_ram0
   134  07FC                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  07FC                     __end_of__initialization:	
   138  07FC  0183               	clrf	3
   139  07FD  120A  118A  2F00   	ljmp	_main	;jump to C main() function
   140                           
   141                           	psect	bitbssBANK0
   142  0258                     __pbitbssBANK0:	
   143  0258                     _RC_session_activated:	
   144  0258                     	ds	1
   145  0259                     _RC_session_data_received:	
   146  0259                     	ds	1
   147  025A                     _RC_session_start_received:	
   148  025A                     	ds	1
   149  025B                     _mode:	
   150  025B                     	ds	1
   151                           
   152                           	psect	bssBANK0
   153  0020                     __pbssBANK0:	
   154  0020                     _data:	
   155  0020                     	ds	32
   156  0040                     _RC_DATA:	
   157  0040                     	ds	1
   158  0041                     _data_bit_counter:	
   159  0041                     	ds	1
   160  0042                     _rc_data_index:	
   161  0042                     	ds	1
   162                           
   163                           	psect	clrtext
   164  06F8                     clear_ram0:	
   165                           ;	Called with FSR containing the base address, and
   166                           ;	W with the last address+1
   167                           
   168  06F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   169  06F9                     clrloop0:	
   170  06F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   171  06FA  0A84               	incf	4,f	;increment pointer
   172  06FB  0604               	xorwf	4,w	;XOR with final address
   173  06FC  1903               	btfsc	3,2	;have we reached the end yet?
   174  06FD  3400               	retlw	0	;all done for this memory range, return
   175  06FE  0604               	xorwf	4,w	;XOR again to restore value
   176  06FF  2EF9               	goto	clrloop0	;do the next byte
   177                           
   178                           	psect	cstackCOMMON
   179  0071                     __pcstackCOMMON:	
   180  0071                     ?_main:	
   181  0071                     ?_interrupt_handler:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0071                     ??_interrupt_handler:	
   185                           ; 1 bytes @ 0x0
   186                           
   187                           
   188                           ; 1 bytes @ 0x0
   189  0071                     	ds	8
   190  0079                     interrupt_handler@j:	
   191                           
   192                           ; 1 bytes @ 0x8
   193  0079                     	ds	1
   194  007A                     interrupt_handler@i:	
   195                           
   196                           ; 1 bytes @ 0x9
   197  007A                     	ds	1
   198  007B                     interrupt_handler@i_57:	
   199                           
   200                           ; 1 bytes @ 0xA
   201  007B                     	ds	1
   202  007C                     interrupt_handler@temp:	
   203                           
   204                           ; 2 bytes @ 0xB
   205  007C                     	ds	2
   206                           
   207                           	psect	cstackBANK0
   208  0043                     __pcstackBANK0:	
   209  0043                     ??_main:	
   210                           
   211                           ; 1 bytes @ 0x0
   212  0043                     	ds	2
   213  0045                     main@temp_TMR1:	
   214                           
   215                           ; 2 bytes @ 0x2
   216  0045                     	ds	2
   217  0047                     main@temp_last_CCP1_time:	
   218                           
   219                           ; 2 bytes @ 0x4
   220  0047                     	ds	2
   221  0049                     main@temp:	
   222                           
   223                           ; 2 bytes @ 0x6
   224  0049                     	ds	2
   225                           
   226                           	psect	maintext
   227  0700                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 54 in file "base_main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  temp            2    6[BANK0 ] unsigned int 
   238 ;;  temp_last_CC    2    4[BANK0 ] unsigned int 
   239 ;;  temp_TMR1       2    2[BANK0 ] unsigned int 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       6       0       0       0
   251 ;;      Temps:          0       2       0       0       0
   252 ;;      Totals:         0       8       0       0       0
   253 ;;Total ram usage:        8 bytes
   254 ;; Hardware stack levels required when called:    1
   255 ;; This function calls:
   256 ;;		Nothing
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           
   263                           ;psect for function _main
   264  0700                     _main:	
   265                           
   266                           ;base_main.c: 56: TRISA = 0;
   267                           
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0]
   270  0700  1683               	bsf	3,5	;RP0=1, select bank1
   271  0701  1303               	bcf	3,6	;RP1=0, select bank1
   272  0702  0185               	clrf	5	;volatile
   273                           
   274                           ;base_main.c: 57: ANSEL = 0;
   275  0703  1683               	bsf	3,5	;RP0=1, select bank3
   276  0704  1703               	bsf	3,6	;RP1=1, select bank3
   277  0705  0188               	clrf	8	;volatile
   278                           
   279                           ;base_main.c: 58: ANSELH = 0;
   280  0706  0189               	clrf	9	;volatile
   281                           
   282                           ;base_main.c: 61: TMR1GE = 0; TMR1ON = 1;
   283  0707  1283               	bcf	3,5	;RP0=0, select bank0
   284  0708  1303               	bcf	3,6	;RP1=0, select bank0
   285  0709  1310               	bcf	16,6	;volatile
   286  070A  1410               	bsf	16,0	;volatile
   287                           
   288                           ;base_main.c: 62: TMR1CS = 0;
   289  070B  1090               	bcf	16,1	;volatile
   290                           
   291                           ;base_main.c: 63: T1CKPS1 = 1; T1CKPS0 = 1;
   292  070C  1690               	bsf	16,5	;volatile
   293  070D  1610               	bsf	16,4	;volatile
   294                           
   295                           ;base_main.c: 74: TRISC1 = 0;
   296  070E  1683               	bsf	3,5	;RP0=1, select bank1
   297  070F  1303               	bcf	3,6	;RP1=0, select bank1
   298  0710  1087               	bcf	7,1	;volatile
   299                           
   300                           ;base_main.c: 75: CCP1M3 = 0; CCP1M2 = 1; CCP1M1 = 0; CCP1M0 = 0;
   301  0711  1283               	bcf	3,5	;RP0=0, select bank0
   302  0712  1303               	bcf	3,6	;RP1=0, select bank0
   303  0713  1197               	bcf	23,3	;volatile
   304  0714  1517               	bsf	23,2	;volatile
   305  0715  1097               	bcf	23,1	;volatile
   306  0716  1017               	bcf	23,0	;volatile
   307                           
   308                           ;base_main.c: 76: CCP1IE = 1;
   309  0717  1683               	bsf	3,5	;RP0=1, select bank1
   310  0718  1303               	bcf	3,6	;RP1=0, select bank1
   311  0719  150C               	bsf	12,2	;volatile
   312                           
   313                           ;base_main.c: 77: CCP1IF = 0;
   314  071A  1283               	bcf	3,5	;RP0=0, select bank0
   315  071B  1303               	bcf	3,6	;RP1=0, select bank0
   316  071C  110C               	bcf	12,2	;volatile
   317                           
   318                           ;base_main.c: 78: last_CCP1_time = TMR1;
   319  071D  080F               	movf	15,w	;volatile
   320  071E  00CD               	movwf	_last_CCP1_time+1
   321  071F  080E               	movf	14,w	;volatile
   322  0720  00CC               	movwf	_last_CCP1_time
   323                           
   324                           ;base_main.c: 79: PEIE = 1;
   325  0721  170B               	bsf	11,6	;volatile
   326                           
   327                           ;base_main.c: 80: GIE = 1;
   328  0722  178B               	bsf	11,7	;volatile
   329  0723                     l672:	
   330                           ;base_main.c: 82: unsigned int temp_TMR1;
   331                           ;base_main.c: 83: unsigned int temp_last_CCP1_time;
   332                           ;base_main.c: 84: unsigned int temp;
   333                           ;base_main.c: 86: while (1) {
   334                           
   335                           
   336                           ;base_main.c: 87: temp_last_CCP1_time = last_CCP1_time;
   337  0723  084D               	movf	_last_CCP1_time+1,w
   338  0724  00C8               	movwf	main@temp_last_CCP1_time+1
   339  0725  084C               	movf	_last_CCP1_time,w
   340  0726  00C7               	movwf	main@temp_last_CCP1_time
   341                           
   342                           ;base_main.c: 89: temp_TMR1 = TMR1 + 300;
   343  0727  080E               	movf	14,w	;volatile
   344  0728  3E2C               	addlw	44
   345  0729  00C3               	movwf	??_main
   346  072A  080F               	movf	15,w	;volatile
   347  072B  1803               	skipnc
   348  072C  3E01               	addlw	1
   349  072D  3E01               	addlw	1
   350  072E  00C4               	movwf	??_main+1
   351  072F  0843               	movf	??_main,w
   352  0730  00C5               	movwf	main@temp_TMR1
   353  0731  0844               	movf	??_main+1,w
   354  0732  00C6               	movwf	main@temp_TMR1+1
   355                           
   356                           ;base_main.c: 90: temp = temp_TMR1 - temp_last_CCP1_time;
   357  0733  0947               	comf	main@temp_last_CCP1_time,w
   358  0734  00C3               	movwf	??_main
   359  0735  0948               	comf	main@temp_last_CCP1_time+1,w
   360  0736  00C4               	movwf	??_main+1
   361  0737  0AC3               	incf	??_main,f
   362  0738  1903               	skipnz
   363  0739  0AC4               	incf	??_main+1,f
   364  073A  0845               	movf	main@temp_TMR1,w
   365  073B  0743               	addwf	??_main,w
   366  073C  00C9               	movwf	main@temp
   367  073D  0846               	movf	main@temp_TMR1+1,w
   368  073E  1803               	skipnc
   369  073F  0A46               	incf	main@temp_TMR1+1,w
   370  0740  0744               	addwf	??_main+1,w
   371  0741  00CA               	movwf	main@temp+1
   372                           
   373                           ;base_main.c: 91: if ((temp > 27800)) {
   374  0742  306C               	movlw	108
   375  0743  024A               	subwf	main@temp+1,w
   376  0744  3099               	movlw	153
   377  0745  1903               	skipnz
   378  0746  0249               	subwf	main@temp,w
   379  0747  1C03               	skipc
   380  0748  2F4E               	goto	l688
   381                           
   382                           ;base_main.c: 92: RC_DATA = 0;
   383  0749  01C0               	clrf	_RC_DATA
   384                           
   385                           ;base_main.c: 93: RC_session_activated = 0;
   386  074A  104B               	bcf	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   387                           
   388                           ;base_main.c: 94: RC_session_start_received = 0;
   389  074B  114B               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   390                           
   391                           ;base_main.c: 95: RC_session_data_received = 0;
   392  074C  10CB               	bcf	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   393                           
   394                           ;base_main.c: 96: data_bit_counter = 0;
   395  074D  01C1               	clrf	_data_bit_counter
   396  074E                     l688:	
   397                           
   398                           ;base_main.c: 97: }
   399                           ;base_main.c: 98: PORTA = RC_DATA;
   400  074E  0840               	movf	_RC_DATA,w
   401  074F  0085               	movwf	5	;volatile
   402  0750  2F23               	goto	l672
   403  0751                     __end_of_main:	
   404                           
   405                           	psect	text1
   406  0751                     __ptext1:	
   407 ;; *************** function _interrupt_handler *****************
   408 ;; Defined at:
   409 ;;		line 102 in file "base_main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  j               1    8[COMMON] unsigned char 
   414 ;;  i               1   10[COMMON] unsigned char 
   415 ;;  temp            2   11[COMMON] unsigned int 
   416 ;;  i               1    9[COMMON] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         5       0       0       0       0
   428 ;;      Temps:          8       0       0       0       0
   429 ;;      Totals:        13       0       0       0       0
   430 ;;Total ram usage:       13 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		Interrupt level 1
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _interrupt_handler
   441  0751                     _interrupt_handler:	
   442                           
   443                           ;base_main.c: 103: if (CCP1IF == 1) {
   444  0751  1D0C               	btfss	12,2	;volatile
   445  0752  2FE9               	goto	i1l86
   446                           
   447                           ;base_main.c: 104: if (RC_session_activated == 0) {
   448  0753  184B               	btfsc	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   449  0754  2F7C               	goto	i1l69
   450                           
   451                           ;base_main.c: 105: if (RC_session_start_received == 1) {
   452  0755  1D4B               	btfss	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   453  0756  2F79               	goto	i1l70
   454                           
   455                           ;base_main.c: 106: unsigned int temp = CCPR1-last_CCP1_time;
   456  0757  094C               	comf	_last_CCP1_time,w
   457  0758  00F1               	movwf	??_interrupt_handler
   458  0759  094D               	comf	_last_CCP1_time+1,w
   459  075A  00F2               	movwf	??_interrupt_handler+1
   460  075B  0AF1               	incf	??_interrupt_handler,f
   461  075C  1903               	skipnz
   462  075D  0AF2               	incf	??_interrupt_handler+1,f
   463  075E  0815               	movf	21,w	;volatile
   464  075F  0771               	addwf	??_interrupt_handler,w
   465  0760  00F3               	movwf	??_interrupt_handler+2
   466  0761  0816               	movf	22,w	;volatile
   467  0762  1803               	skipnc
   468  0763  0A16               	incf	22,w	;volatile
   469  0764  0772               	addwf	??_interrupt_handler+1,w
   470  0765  00F4               	movwf	??_interrupt_handler+3
   471  0766  0873               	movf	??_interrupt_handler+2,w
   472  0767  00FC               	movwf	interrupt_handler@temp
   473  0768  0874               	movf	??_interrupt_handler+3,w
   474  0769  00FD               	movwf	interrupt_handler@temp+1
   475                           
   476                           ;base_main.c: 107: if (temp > 3000) {
   477  076A  300B               	movlw	11
   478  076B  027D               	subwf	interrupt_handler@temp+1,w
   479  076C  30B9               	movlw	185
   480  076D  1903               	skipnz
   481  076E  027C               	subwf	interrupt_handler@temp,w
   482  076F  1C03               	skipc
   483  0770  2F75               	goto	i1l702
   484                           
   485                           ;base_main.c: 108: RC_session_activated = 1;
   486  0771  144B               	bsf	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   487                           
   488                           ;base_main.c: 109: data_bit_counter = 1;
   489  0772  01C1               	clrf	_data_bit_counter
   490  0773  0AC1               	incf	_data_bit_counter,f
   491                           
   492                           ;base_main.c: 110: } else {
   493  0774  2F76               	goto	i1l704
   494  0775                     i1l702:	
   495                           
   496                           ;base_main.c: 111: char j = 0;
   497  0775  01F9               	clrf	interrupt_handler@j
   498  0776                     i1l704:	
   499                           
   500                           ;base_main.c: 112: }
   501                           ;base_main.c: 113: RC_session_start_received = 0;
   502  0776  114B               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   503                           
   504                           ;base_main.c: 114: char i = 0;
   505  0777  01FA               	clrf	interrupt_handler@i
   506                           
   507                           ;base_main.c: 115: } else {
   508  0778  2FE4               	goto	i1l730
   509  0779                     i1l70:	
   510                           
   511                           ;base_main.c: 116: RC_session_start_received = 1;
   512  0779  154B               	bsf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   513                           
   514                           ;base_main.c: 117: char i = 0;
   515  077A  01FB               	clrf	interrupt_handler@i_57
   516                           
   517                           ;base_main.c: 118: }
   518                           ;base_main.c: 119: } else {
   519  077B  2FE4               	goto	i1l730
   520  077C                     i1l69:	
   521                           
   522                           ;base_main.c: 120: if (RC_session_data_received == 0) {
   523  077C  18CB               	btfsc	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   524  077D  2FAD               	goto	i1l75
   525                           
   526                           ;base_main.c: 121: data_bit_counter++;
   527  077E  3001               	movlw	1
   528  077F  00F1               	movwf	??_interrupt_handler
   529  0780  0871               	movf	??_interrupt_handler,w
   530  0781  07C1               	addwf	_data_bit_counter,f
   531                           
   532                           ;base_main.c: 122: if (data_bit_counter <= 33) {
   533  0782  3022               	movlw	34
   534  0783  0241               	subwf	_data_bit_counter,w
   535  0784  1803               	skipnc
   536  0785  2FAB               	goto	i1l76
   537                           
   538                           ;base_main.c: 123: if (CCPR1-last_CCP1_time > 300) {
   539  0786  094C               	comf	_last_CCP1_time,w
   540  0787  00F1               	movwf	??_interrupt_handler
   541  0788  094D               	comf	_last_CCP1_time+1,w
   542  0789  00F2               	movwf	??_interrupt_handler+1
   543  078A  0AF1               	incf	??_interrupt_handler,f
   544  078B  1903               	skipnz
   545  078C  0AF2               	incf	??_interrupt_handler+1,f
   546  078D  0815               	movf	21,w	;volatile
   547  078E  0771               	addwf	??_interrupt_handler,w
   548  078F  00F3               	movwf	??_interrupt_handler+2
   549  0790  0816               	movf	22,w	;volatile
   550  0791  1803               	skipnc
   551  0792  0A16               	incf	22,w	;volatile
   552  0793  0772               	addwf	??_interrupt_handler+1,w
   553  0794  00F4               	movwf	??_interrupt_handler+3
   554  0795  3001               	movlw	1
   555  0796  0274               	subwf	??_interrupt_handler+3,w
   556  0797  302D               	movlw	45
   557  0798  1903               	skipnz
   558  0799  0273               	subwf	??_interrupt_handler+2,w
   559  079A  1C03               	skipc
   560  079B  2FA4               	goto	i1l716
   561                           
   562                           ;base_main.c: 124: data[data_bit_counter-2] = 1;
   563  079C  0841               	movf	_data_bit_counter,w
   564  079D  3EFE               	addlw	254
   565  079E  3E20               	addlw	(low (_data| 0))& (0+255)
   566  079F  0084               	movwf	4
   567  07A0  1383               	bcf	3,7	;select IRP bank0
   568  07A1  0180               	clrf	0
   569  07A2  0A80               	incf	0,f
   570                           
   571                           ;base_main.c: 125: } else {
   572  07A3  2FE4               	goto	i1l730
   573  07A4                     i1l716:	
   574                           
   575                           ;base_main.c: 126: data[data_bit_counter-2] = 0;
   576  07A4  0841               	movf	_data_bit_counter,w
   577  07A5  3EFE               	addlw	254
   578  07A6  3E20               	addlw	(low (_data| 0))& (0+255)
   579  07A7  0084               	movwf	4
   580  07A8  1383               	bcf	3,7	;select IRP bank0
   581  07A9  0180               	clrf	0
   582                           
   583                           ;base_main.c: 127: }
   584                           ;base_main.c: 128: } else {
   585  07AA  2FE4               	goto	i1l730
   586  07AB                     i1l76:	
   587                           
   588                           ;base_main.c: 129: RC_session_data_received = 1;
   589  07AB  14CB               	bsf	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   590  07AC  2FAF               	goto	i1l718
   591  07AD                     i1l75:	
   592                           ;base_main.c: 131: }
   593                           ;base_main.c: 142: } else {
   594                           
   595                           ;base_main.c: 130: RC_session_start_received = 1;
   596                           
   597                           
   598                           ;base_main.c: 143: if (RC_session_start_received == 0) {
   599  07AD  194B               	btfsc	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   600  07AE  2FB1               	goto	i1l720
   601  07AF                     i1l718:	
   602                           
   603                           ;base_main.c: 144: RC_session_start_received = 1;
   604  07AF  154B               	bsf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   605                           
   606                           ;base_main.c: 145: } else {
   607  07B0  2FE4               	goto	i1l730
   608  07B1                     i1l720:	
   609                           
   610                           ;base_main.c: 146: if (CCPR1 - last_CCP1_time > 3000) {
   611  07B1  094C               	comf	_last_CCP1_time,w
   612  07B2  00F1               	movwf	??_interrupt_handler
   613  07B3  094D               	comf	_last_CCP1_time+1,w
   614  07B4  00F2               	movwf	??_interrupt_handler+1
   615  07B5  0AF1               	incf	??_interrupt_handler,f
   616  07B6  1903               	skipnz
   617  07B7  0AF2               	incf	??_interrupt_handler+1,f
   618  07B8  0815               	movf	21,w	;volatile
   619  07B9  0771               	addwf	??_interrupt_handler,w
   620  07BA  00F3               	movwf	??_interrupt_handler+2
   621  07BB  0816               	movf	22,w	;volatile
   622  07BC  1803               	skipnc
   623  07BD  0A16               	incf	22,w	;volatile
   624  07BE  0772               	addwf	??_interrupt_handler+1,w
   625  07BF  00F4               	movwf	??_interrupt_handler+3
   626  07C0  300B               	movlw	11
   627  07C1  0274               	subwf	??_interrupt_handler+3,w
   628  07C2  30B9               	movlw	185
   629  07C3  1903               	skipnz
   630  07C4  0273               	subwf	??_interrupt_handler+2,w
   631  07C5  1C03               	skipc
   632  07C6  2FCE               	goto	i1l726
   633                           
   634                           ;base_main.c: 147: RC_session_activated = 1;
   635  07C7  144B               	bsf	_RC_session_activated/(0+8),_RC_session_activated& (0+7)
   636                           
   637                           ;base_main.c: 148: RC_session_start_received = 0;
   638  07C8  114B               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   639                           
   640                           ;base_main.c: 149: RC_session_data_received = 0;
   641  07C9  10CB               	bcf	_RC_session_data_received/(0+8),_RC_session_data_received& (0+7)
   642                           
   643                           ;base_main.c: 150: data_bit_counter = 1;
   644  07CA  01C1               	clrf	_data_bit_counter
   645  07CB  0AC1               	incf	_data_bit_counter,f
   646                           
   647                           ;base_main.c: 151: RC_DATA = 0;
   648  07CC  01C0               	clrf	_RC_DATA
   649                           
   650                           ;base_main.c: 152: } else if (CCPR1 - last_CCP1_time > 23250) {
   651  07CD  2FE4               	goto	i1l730
   652  07CE                     i1l726:	
   653  07CE  094C               	comf	_last_CCP1_time,w
   654  07CF  00F1               	movwf	??_interrupt_handler
   655  07D0  094D               	comf	_last_CCP1_time+1,w
   656  07D1  00F2               	movwf	??_interrupt_handler+1
   657  07D2  0AF1               	incf	??_interrupt_handler,f
   658  07D3  1903               	skipnz
   659  07D4  0AF2               	incf	??_interrupt_handler+1,f
   660  07D5  0815               	movf	21,w	;volatile
   661  07D6  0771               	addwf	??_interrupt_handler,w
   662  07D7  00F3               	movwf	??_interrupt_handler+2
   663  07D8  0816               	movf	22,w	;volatile
   664  07D9  1803               	skipnc
   665  07DA  0A16               	incf	22,w	;volatile
   666  07DB  0772               	addwf	??_interrupt_handler+1,w
   667  07DC  00F4               	movwf	??_interrupt_handler+3
   668  07DD  305A               	movlw	90
   669  07DE  0274               	subwf	??_interrupt_handler+3,w
   670  07DF  30D3               	movlw	211
   671  07E0  1903               	skipnz
   672  07E1  0273               	subwf	??_interrupt_handler+2,w
   673  07E2  1803               	btfsc	3,0
   674                           
   675                           ;base_main.c: 153: RC_session_start_received = 0;
   676  07E3  114B               	bcf	_RC_session_start_received/(0+8),_RC_session_start_received& (0+7)
   677  07E4                     i1l730:	
   678                           
   679                           ;base_main.c: 154: }
   680                           ;base_main.c: 155: }
   681                           ;base_main.c: 156: }
   682                           ;base_main.c: 157: }
   683                           ;base_main.c: 158: last_CCP1_time = CCPR1;
   684  07E4  0816               	movf	22,w	;volatile
   685  07E5  00CD               	movwf	_last_CCP1_time+1
   686  07E6  0815               	movf	21,w	;volatile
   687  07E7  00CC               	movwf	_last_CCP1_time
   688                           
   689                           ;base_main.c: 159: CCP1IF = 0;
   690  07E8  110C               	bcf	12,2	;volatile
   691  07E9                     i1l86:	
   692  07E9  0878               	movf	??_interrupt_handler+7,w
   693  07EA  00FF               	movwf	127
   694  07EB  0877               	movf	??_interrupt_handler+6,w
   695  07EC  008A               	movwf	10
   696  07ED  0876               	movf	??_interrupt_handler+5,w
   697  07EE  0084               	movwf	4
   698  07EF  0E75               	swapf	(??_interrupt_handler+4)^(0+-128),w
   699  07F0  0083               	movwf	3
   700  07F1  0EFE               	swapf	126,f
   701  07F2  0E7E               	swapf	126,w
   702  07F3  0009               	retfie
   703  07F4                     __end_of_interrupt_handler:	
   704  007E                     btemp	set	126	;btemp
   705  007E                     wtemp	set	126
   706  007E                     wtemp0	set	126
   707  0080                     wtemp1	set	128
   708  0082                     wtemp2	set	130
   709  0084                     wtemp3	set	132
   710  0086                     wtemp4	set	134
   711  0088                     wtemp5	set	136
   712  007F                     wtemp6	set	127
   713  007E                     ttemp	set	126
   714  007E                     ttemp0	set	126
   715  0081                     ttemp1	set	129
   716  0084                     ttemp2	set	132
   717  0087                     ttemp3	set	135
   718  007F                     ttemp4	set	127
   719  007E                     ltemp	set	126
   720  007E                     ltemp0	set	126
   721  0082                     ltemp1	set	130
   722  0086                     ltemp2	set	134
   723  0080                     ltemp3	set	128
   724                           
   725                           	psect	intentry
   726  0004                     __pintentry:	
   727                           ;incstack = 0
   728                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
   729                           
   730  0004                     interrupt_function:	
   731  007E                     saved_w	set	btemp
   732  0004  00FE               	movwf	btemp
   733  0005  0E03               	swapf	3,w
   734  0006  00F5               	movwf	??_interrupt_handler+4
   735  0007  0804               	movf	4,w
   736  0008  00F6               	movwf	??_interrupt_handler+5
   737  0009  080A               	movf	10,w
   738  000A  00F7               	movwf	??_interrupt_handler+6
   739  000B  1283               	bcf	3,5	;RP0=0, select bank0
   740  000C  1303               	bcf	3,6	;RP1=0, select bank0
   741  000D  087F               	movf	btemp+1,w
   742  000E  00F8               	movwf	??_interrupt_handler+7
   743  000F  120A  118A  2F51   	ljmp	_interrupt_handler


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80      8      46
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0      69
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_handler                                   13    13      0      26
                                              0 COMMON    13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue May 10 11:11:15 2016

               __CFG_CP$OFF 0000                          fsr 0004                         l672 0723  
                       l688 074E                         _GIE 005F                __CFG_CPD$OFF 0000  
                       fsr0 0004                         indf 0000                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        _PEIE 005E                        i1l70 0779  
                      i1l75 07AD                        i1l76 07AB                        i1l69 077C  
                      i1l86 07E9                        _TMR1 000E                __CFG_WRT$OFF 0000  
                      _data 0020                        _main 0700                        _mode 025B  
                      btemp 007E                        ltemp 007E                        start 0012  
                      ttemp 007E                        wtemp 007E               __CFG_IESO$OFF 0000  
             __CFG_MCLRE$ON 0000                       ?_main 0071                       _CCPR1 0015  
             __CFG_WDTE$OFF 0000                       _ANSEL 0188                       i1l702 0775  
                     i1l720 07B1                       i1l704 0776                       i1l730 07E4  
                     i1l716 07A4                       i1l726 07CE                       i1l718 07AF  
                     _PORTA 0005                       _TRISA 0085              __CFG_FCMEN$OFF 0000  
            __CFG_BOREN$OFF 0000                       pclath 000A                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F             __initialization 07F4                __end_of_main 0751  
                    ??_main 0043                      _CCP1M0 00B8                      _CCP1M1 00B9  
                    _CCP1M2 00BA                      _CCP1M3 00BB                      _CCP1IE 0462  
                    _CCP1IF 0062              _last_CCP1_time 004C                      _ANSELH 0189  
                    _TMR1GE 0086                      _TMR1CS 0081                      _TMR1ON 0080  
                    _TRISC1 0439       interrupt_handler@i_57 007B       interrupt_handler@temp 007C  
            __CFG_PWRTE$OFF 0000               main@temp_TMR1 0045                      saved_w 007E  
   __end_of__initialization 07FC               _rc_data_index 0042              __pcstackCOMMON 0071  
                __pbssBANK0 0020            _data_bit_counter 0041                  __pmaintext 0700  
                __pintentry 0004                     _T1CKPS0 0084                     _T1CKPS1 0085  
 _RC_session_start_received 025A                     _RC_DATA 0040          interrupt_handler@i 007A  
        interrupt_handler@j 0079                     __ptext1 0751                     clrloop0 06F9  
      end_of_initialization 07FC               __pbitbssBANK0 0258         start_initialization 07F4  
   main@temp_last_CCP1_time 0047                   ___latbits 0002               __pcstackBANK0 0043  
                 __pnvBANK0 004C           _interrupt_handler 0751          ?_interrupt_handler 0071  
       ??_interrupt_handler 0071           interrupt_function 0004                   clear_ram0 06F8  
 __end_of_interrupt_handler 07F4           __CFG_BOR4V$BOR21V 0000    _RC_session_data_received 0259  
             __size_of_main 0051  __size_of_interrupt_handler 00A3                    main@temp 0049  
                  intlevel1 0000        _RC_session_activated 0258  
